// Code generated by mockery v2.43.1. DO NOT EDIT.

package mocks

import (
	model "github.com/Calmantara/go-prakerja-2024/deploy/model"
	mock "github.com/stretchr/testify/mock"
)

// UserOrderRepo is an autogenerated mock type for the UserOrderRepo type
type UserOrderRepo struct {
	mock.Mock
}

// GetByUsername provides a mock function with given fields: username
func (_m *UserOrderRepo) GetByUsername(username string) (*model.User, error) {
	ret := _m.Called(username)

	if len(ret) == 0 {
		panic("no return value specified for GetByUsername")
	}

	var r0 *model.User
	var r1 error
	if rf, ok := ret.Get(0).(func(string) (*model.User, error)); ok {
		return rf(username)
	}
	if rf, ok := ret.Get(0).(func(string) *model.User); ok {
		r0 = rf(username)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*model.User)
		}
	}

	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(username)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewUserOrderRepo creates a new instance of UserOrderRepo. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewUserOrderRepo(t interface {
	mock.TestingT
	Cleanup(func())
}) *UserOrderRepo {
	mock := &UserOrderRepo{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
